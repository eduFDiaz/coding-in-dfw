version: '3.4'

services:
  db:
    image: mysql:5.7
    container_name: codingindfw.db
    environment:
      MYSQL_DATABASE: 'codingindfw'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'dcruz'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'Oflasgp21'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'Oflasgp21'
    ports: 
      - 3305:3306
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
      - './coding.API/.docker/.db/:/docker-entrypoint-initdb.d/'

  api-service:
    image: codingindfw.api
    container_name: codingindfw.api
    build:
      context: ./coding.API
      dockerfile: .docker/production.dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

      # Set the certificate env variables (We copied certificate from host to below location. See volumes)
      #- Kestrel__Certificates__Default__Path=/root/.dotnet/https/aspnetcore-cert.pfx
      #- Kestrel__Certificates__Default__Password=yourpassword

      # The .net core base image used in the docker file, runs the app on port 80 by default
      # Force it to run on ports 5000 & 5001
      # Also we are specifying 0.0.0.0 instead of localhost
      # as the app crashes inside docker when used localhost.
      - ASPNETCORE_URLS=http://0.0.0.0:5000/;https://0.0.0.0:5001
      - DOTNET_USE_POLLING_FILE_WATCHER=true
    ports:
      - 5050:5050
    volumes:
      # Map the certificate from host to the container
      #- 'c:/cert/:/root/.dotnet/https'
      #- 'c:/cert/:/usr/local/share/ca-certificates'
      - './coding.API/:/src'
    # depends_on: 
    #    - db
 
#   ng-app-service:
#     image: codingindfw.frontend
#     container_name: codingindfw.frontend
#     build:
#       context: ./coding-frontend
#       dockerfile: .docker/production.dockerfile
#     environment:
#       NODE_ENV: production
#     volumes:
#       - './coding-frontend/:/usr/share/app'
#       - /app/node_modules/
#     ports:
#       - 4200:80
#     #command: ['ng', 'serve', '--host=0.0.0.0', '--watch', '--poll=2000']
#     depends_on: 
#       - api-service
   
volumes:
   my-db: